{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alisson\\\\Desktop\\\\expense-tracker_fullstack\\\\frontend\\\\src\\\\Components\\\\Chart\\\\Chart.js\";\nimport React from 'react';\nimport { Chart as ChartJs, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJs.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement);\nfunction Chart() {\n  // Datos estáticos para ingresos y gastos\n  const incomes = [{\n    date: '2022-01-01',\n    amount: 100\n  }, {\n    date: '2022-01-02',\n    amount: 150\n  }, {\n    date: '2022-01-03',\n    amount: 200\n  }\n  // Agrega más datos de ingresos aquí si lo deseas\n  ];\n\n  const expenses = [{\n    date: '2022-01-01',\n    amount: 50\n  }, {\n    date: '2022-01-02',\n    amount: 75\n  }, {\n    date: '2022-01-03',\n    amount: 100\n  }\n  // Agrega más datos de gastos aquí si lo deseas\n  ];\n\n  const data = {\n    labels: incomes.map(inc => dateFormat(inc.date)),\n    datasets: [{\n      label: 'Income',\n      data: incomes.map(income => income.amount),\n      backgroundColor: 'green',\n      tension: 0.2\n    }, {\n      label: 'Expenses',\n      data: expenses.map(expense => expense.amount),\n      backgroundColor: 'red',\n      tension: 0.2\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(ChartStyled, {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_c = Chart;\nconst ChartStyled = styled.div`\n    background: #FCF6F9;\n    border: 2px solid #FFFFFF;\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n    padding: 1rem;\n    border-radius: 20px;\n    height: 100%;\n`;\n_c2 = ChartStyled;\nexport default Chart;\nvar _c, _c2;\n$RefreshReg$(_c, \"Chart\");\n$RefreshReg$(_c2, \"ChartStyled\");","map":{"version":3,"names":["React","Chart","ChartJs","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","Line","styled","register","incomes","date","amount","expenses","data","labels","map","inc","dateFormat","datasets","label","income","backgroundColor","tension","expense","ChartStyled","div"],"sources":["C:/Users/Alisson/Desktop/expense-tracker_fullstack/frontend/src/Components/Chart/Chart.js"],"sourcesContent":["import React from 'react';\r\nimport { Chart as ChartJs, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\nimport styled from 'styled-components';\r\n\r\nChartJs.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement);\r\n\r\nfunction Chart() {\r\n    // Datos estáticos para ingresos y gastos\r\n    const incomes = [\r\n        { date: '2022-01-01', amount: 100 },\r\n        { date: '2022-01-02', amount: 150 },\r\n        { date: '2022-01-03', amount: 200 },\r\n        // Agrega más datos de ingresos aquí si lo deseas\r\n    ];\r\n\r\n    const expenses = [\r\n        { date: '2022-01-01', amount: 50 },\r\n        { date: '2022-01-02', amount: 75 },\r\n        { date: '2022-01-03', amount: 100 },\r\n        // Agrega más datos de gastos aquí si lo deseas\r\n    ];\r\n\r\n    const data = {\r\n        labels: incomes.map((inc) => dateFormat(inc.date)),\r\n        datasets: [\r\n            {\r\n                label: 'Income',\r\n                data: incomes.map((income) => income.amount),\r\n                backgroundColor: 'green',\r\n                tension: 0.2\r\n            },\r\n            {\r\n                label: 'Expenses',\r\n                data: expenses.map((expense) => expense.amount),\r\n                backgroundColor: 'red',\r\n                tension: 0.2\r\n            }\r\n        ]\r\n    };\r\n\r\n    return (\r\n        <ChartStyled>\r\n            <Line data={data} />\r\n        </ChartStyled>\r\n    );\r\n}\r\n\r\nconst ChartStyled = styled.div`\r\n    background: #FCF6F9;\r\n    border: 2px solid #FFFFFF;\r\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n    padding: 1rem;\r\n    border-radius: 20px;\r\n    height: 100%;\r\n`;\r\n\r\nexport default Chart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,UAAU,QAAQ,UAAU;AACtI,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,MAAM,MAAM,mBAAmB;AAAC;AAEvCV,OAAO,CAACW,QAAQ,CAACV,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,UAAU,CAAC;AAE3G,SAAST,KAAK,GAAG;EACb;EACA,MAAMa,OAAO,GAAG,CACZ;IAAEC,IAAI,EAAE,YAAY;IAAEC,MAAM,EAAE;EAAI,CAAC,EACnC;IAAED,IAAI,EAAE,YAAY;IAAEC,MAAM,EAAE;EAAI,CAAC,EACnC;IAAED,IAAI,EAAE,YAAY;IAAEC,MAAM,EAAE;EAAI;EAClC;EAAA,CACH;;EAED,MAAMC,QAAQ,GAAG,CACb;IAAEF,IAAI,EAAE,YAAY;IAAEC,MAAM,EAAE;EAAG,CAAC,EAClC;IAAED,IAAI,EAAE,YAAY;IAAEC,MAAM,EAAE;EAAG,CAAC,EAClC;IAAED,IAAI,EAAE,YAAY;IAAEC,MAAM,EAAE;EAAI;EAClC;EAAA,CACH;;EAED,MAAME,IAAI,GAAG;IACTC,MAAM,EAAEL,OAAO,CAACM,GAAG,CAAEC,GAAG,IAAKC,UAAU,CAACD,GAAG,CAACN,IAAI,CAAC,CAAC;IAClDQ,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,QAAQ;MACfN,IAAI,EAAEJ,OAAO,CAACM,GAAG,CAAEK,MAAM,IAAKA,MAAM,CAACT,MAAM,CAAC;MAC5CU,eAAe,EAAE,OAAO;MACxBC,OAAO,EAAE;IACb,CAAC,EACD;MACIH,KAAK,EAAE,UAAU;MACjBN,IAAI,EAAED,QAAQ,CAACG,GAAG,CAAEQ,OAAO,IAAKA,OAAO,CAACZ,MAAM,CAAC;MAC/CU,eAAe,EAAE,KAAK;MACtBC,OAAO,EAAE;IACb,CAAC;EAET,CAAC;EAED,oBACI,QAAC,WAAW;IAAA,uBACR,QAAC,IAAI;MAAC,IAAI,EAAET;IAAK;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACV;AAEtB;AAAC,KAvCQjB,KAAK;AAyCd,MAAM4B,WAAW,GAAGjB,MAAM,CAACkB,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MAPID,WAAW;AASjB,eAAe5B,KAAK;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}