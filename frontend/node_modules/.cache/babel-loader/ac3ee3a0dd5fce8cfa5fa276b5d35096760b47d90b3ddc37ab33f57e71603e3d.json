{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alisson\\\\Desktop\\\\FinanceMe_Project\\\\frontend\\\\src\\\\Components\\\\Chart\\\\Chart.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Chart as ChartJs, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport styled from 'styled-components';\nimport { useGlobalContext } from '../../context/globalContext';\nimport { dateFormat } from '../../utils/dateFormat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJs.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement);\nfunction Chart() {\n  _s();\n  const {\n    incomes,\n    expenses\n  } = useGlobalContext();\n\n  // Invertir el orden de los datos\n  const reversedIncomes = incomes.slice().reverse();\n  const reversedExpenses = expenses.slice().reverse();\n  const data = {\n    labels: reversedIncomes.map(inc => {\n      const {\n        date\n      } = inc;\n      return dateFormat(date);\n    }),\n    datasets: [{\n      label: 'Income',\n      data: reversedIncomes.map(income => income.amount),\n      backgroundColor: 'green',\n      tension: 0.2\n    }, {\n      label: 'Expenses',\n      data: reversedExpenses.map(expense => expense.amount),\n      backgroundColor: 'red',\n      tension: 0.2\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(ChartStyled, {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(Chart, \"PHep46UhTemPLuSa3MfIkZAuTiE=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Chart;\nconst ChartStyled = styled.div`\n    background: #FCF6F9;\n    border: 2px solid #FFFFFF;\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n    padding: 1rem;\n    border-radius: 20px;\n    height: 100%;\n`;\n_c2 = ChartStyled;\nexport default Chart;\nvar _c, _c2;\n$RefreshReg$(_c, \"Chart\");\n$RefreshReg$(_c2, \"ChartStyled\");","map":{"version":3,"names":["React","Chart","ChartJs","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","Line","styled","useGlobalContext","dateFormat","register","incomes","expenses","reversedIncomes","slice","reverse","reversedExpenses","data","labels","map","inc","date","datasets","label","income","amount","backgroundColor","tension","expense","ChartStyled","div"],"sources":["C:/Users/Alisson/Desktop/FinanceMe_Project/frontend/src/Components/Chart/Chart.js"],"sourcesContent":["import React from 'react';\r\nimport { Chart as ChartJs, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\nimport styled from 'styled-components';\r\nimport { useGlobalContext } from '../../context/globalContext';\r\nimport { dateFormat } from '../../utils/dateFormat';\r\n\r\nChartJs.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement);\r\n\r\nfunction Chart() {\r\n    const { incomes, expenses } = useGlobalContext();\r\n\r\n    // Invertir el orden de los datos\r\n    const reversedIncomes = incomes.slice().reverse();\r\n    const reversedExpenses = expenses.slice().reverse();\r\n\r\n    const data = {\r\n        labels: reversedIncomes.map((inc) => {\r\n            const { date } = inc;\r\n            return dateFormat(date);\r\n        }),\r\n        datasets: [\r\n            {\r\n                label: 'Income',\r\n                data: reversedIncomes.map((income) => income.amount),\r\n                backgroundColor: 'green',\r\n                tension: 0.2\r\n            },\r\n            {\r\n                label: 'Expenses',\r\n                data: reversedExpenses.map((expense) => expense.amount),\r\n                backgroundColor: 'red',\r\n                tension: 0.2\r\n            }\r\n        ]\r\n    };\r\n\r\n    return (\r\n        <ChartStyled>\r\n            <Line data={data} />\r\n        </ChartStyled>\r\n    );\r\n}\r\n\r\nconst ChartStyled = styled.div`\r\n    background: #FCF6F9;\r\n    border: 2px solid #FFFFFF;\r\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n    padding: 1rem;\r\n    border-radius: 20px;\r\n    height: 100%;\r\n`;\r\n\r\nexport default Chart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,UAAU,QAAQ,UAAU;AACtI,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,UAAU,QAAQ,wBAAwB;AAAC;AAEpDZ,OAAO,CAACa,QAAQ,CAACZ,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,UAAU,CAAC;AAE3G,SAAST,KAAK,GAAG;EAAA;EACb,MAAM;IAAEe,OAAO;IAAEC;EAAS,CAAC,GAAGJ,gBAAgB,EAAE;;EAEhD;EACA,MAAMK,eAAe,GAAGF,OAAO,CAACG,KAAK,EAAE,CAACC,OAAO,EAAE;EACjD,MAAMC,gBAAgB,GAAGJ,QAAQ,CAACE,KAAK,EAAE,CAACC,OAAO,EAAE;EAEnD,MAAME,IAAI,GAAG;IACTC,MAAM,EAAEL,eAAe,CAACM,GAAG,CAAEC,GAAG,IAAK;MACjC,MAAM;QAAEC;MAAK,CAAC,GAAGD,GAAG;MACpB,OAAOX,UAAU,CAACY,IAAI,CAAC;IAC3B,CAAC,CAAC;IACFC,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,QAAQ;MACfN,IAAI,EAAEJ,eAAe,CAACM,GAAG,CAAEK,MAAM,IAAKA,MAAM,CAACC,MAAM,CAAC;MACpDC,eAAe,EAAE,OAAO;MACxBC,OAAO,EAAE;IACb,CAAC,EACD;MACIJ,KAAK,EAAE,UAAU;MACjBN,IAAI,EAAED,gBAAgB,CAACG,GAAG,CAAES,OAAO,IAAKA,OAAO,CAACH,MAAM,CAAC;MACvDC,eAAe,EAAE,KAAK;MACtBC,OAAO,EAAE;IACb,CAAC;EAET,CAAC;EAED,oBACI,QAAC,WAAW;IAAA,uBACR,QAAC,IAAI;MAAC,IAAI,EAAEV;IAAK;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACV;AAEtB;AAAC,GAjCQrB,KAAK;EAAA,QACoBY,gBAAgB;AAAA;AAAA,KADzCZ,KAAK;AAmCd,MAAMiC,WAAW,GAAGtB,MAAM,CAACuB,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MAPID,WAAW;AASjB,eAAejC,KAAK;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}